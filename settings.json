// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "nightly": {
    "enabled": true,
    "channel": "stable"
  },
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "theme": {
      "mode": "system",
      "light": "One Light",
      "dark": "Nightfox"
  },
  "tab_bar": {
     "show": true
  },
  "indent_guides": {
     "enabled": true,
     "coloring": "indent_aware"
  },
  // "assistant": {
  //   "default_model": {
  //     "provider": "copilot_chat",
  //     "model": "claude-3-5-sonnet"
  //   },
  //   "version": "2"
  // },
  // Uncomment below to use local AI with Ollama, refer https://zed.dev/docs/language-model-integration?highlight=ollama#using-ollama-on-macos
   // "assistant": {
   //   "default_model": {
   //     "provider": "ollama",
   //     "model": "llama3.1:latest"
   //   },
   //   "version": "2",
   //   "provider": null
   // },
   "language_models": {
      "ollama": {
        "api_url": "http://localhost:11434"
    }
  },
  // File syntax highlighting
   "file_types": {
     "Dockerfile": ["Dockerfile", "Dockerfile.*"],
     "JSON": ["json", "jsonc", "*.code-snippets"]
   },
   // File scan exclusions, hide on the file explorer and search
   "file_scan_exclusions": [
     "**/.git",
     "**/.svn",
     "**/.hg",
     "**/CVS",
     "**/.DS_Store",
     "**/Thumbs.db",
     "**/.classpath",
     "**/.settings",
     // above is default from Zed
     "**/out",
     "**/dist",
     "**/.husky",
     "**/.turbo",
     "**/.vscode-test",
     "**/.vscode",
     "**/.next",
     "**/.storybook",
     "**/.tap",
     "**/.nyc_output",
     "**/report",
     "**/node_modules"
  ],
  "ui_font_size": 14,
  "buffer_font_size": 13,
  "tab_size": 2,
  "cursor_blink": true,
  "buffer_font_family": "MesloLGL Nerd Font",
  "preferred_line_length": 80,
  "buffer_line_height": "comfortable",
  "ui_font_family": "MesloLGL Nerd Font",
  "formatter": "prettier",
  "autosave": "on_focus_change",
  "autosave_delay": 1500,
  "autosave_on_focus_change": false,
  "autosave_on_window_change": false,
  "autosave_on_build": false,
  "autosave_on_build_delay": 1500,
  "autosave_on_build_events": ["build", "run", "debug"],
  "autosave_on_build_events_delay": 1500,
  "vim_mode": true,
  "relative_line_numbers": false,
  "confirm_quit": false,
  "hover_popover_enabled": true,
  "show_copilot_suggestions": true,
  "inlay_hints": {
    "enabled": true,
    "typeHints": true,
    "parameterHints": true,
    "chainingHints": true
  },
  "terminal": {
    "alternate_scroll": "off",
    "blinking": "terminal_controlled",
    "copy_on_select": false,
    "env": {
          "EDITOR": "zed --wait"
    },
    "font_family": "Fira Mono for Powerline",
    "font_features": null,
    "font_size": null,
    "option_as_meta": false,
    // "shell": {},
    "working_directory": "current_project_directory"
  },
  "git": {
    "enabled": true,
    "autoFetch": false,
    "autoFetchInterval": 300,
    "autoFetchOnFocus": false,
    "autoFetchOnWindowChange": false,
    "autoFetchOnBuild": false,
    "git_status": true,
    "autoFetchOnBuildEvents": ["build", "run", "debug"],
    "autoFetchOnBuildEventsDelay": 1500,
    "autoFetchOnBuildDelay": 1500,
    "git_gutter": "tracked_files"
  },
  "prettier": {
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "all",
    "bracketSpacing": true,
    "jsxBracketSameLine": false,
    "arrowParens": "avoid",
    "proseWrap": "preserve",
    "endOfLine": "lf"
  },
  "linter": "eslint",
  "bracket_pairing": "always",
  "eslint": {
    "enabled": true,
    "autoFixOnSave": true,
    "autoFixOnFormat": true,
    "autoFixOnFormatDelay": 1500
  },
  "languages": {
    "JavaScript": {
      "code_actions_on_format": {
        "source.fixAll.eslint": true
      }
    },
    "TypeScript": {
      // Refer https://github.com/jellydn/ts-inlay-hints for how to setup for Neovim and VSCode
      "inlay_hints": {
        "enabled": true,
        "show_parameter_hints": false,
        "show_other_hints": true,
        "show_type_hints": true
      },
      "code_actions_on_format": {
        "source.organizeImports": true,
        "source.fixAll.eslint": true
      }
    },
    "TSX": {
      "code_actions_on_format": {
        "source.organizeImports": true,
        "source.fixAll.eslint": true
      }
    },
    "Python": {
      "format_on_save": { "language_server": { "name": "ruff" } },
      "formatter": { "language_server": { "name": "ruff" } },
      "language_servers": ["pyright", "ruff"]
    }
  },
  "lsp": {
    "typescript-language-server": {
      "initialization_options": {
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": true,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayVariableTypeHints": true,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": true,
          "includeInlayFunctionLikeReturnTypeHints": true,
          "includeInlayEnumMemberValueHints": true
        }
      }
    }
  }
}
